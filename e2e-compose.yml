version: '3'

services:
  bootnode:
    build:
      context: .
      dockerfile: ./integrationtest/Dockerfile
      args:
        node_type: bootnode
    restart: always
    volumes:
      - ./integrationtest/keys/bootnode:/key
    depends_on:
      - funder
    networks:
      primev_net:
        ipv4_address: 172.29.18.2
    ports:
      - "8080:13523"
    env_file:
      - integrationtest/.env
    labels:
      com.datadoghq.ad.check_names: '["openmetrics"]'
      com.datadoghq.ad.init_configs: '[{}]'
      com.datadoghq.ad.instances: |
        [
          {
            "openmetrics_endpoint": "http://%%host%%:13523/metrics",
            "namespace": "integrationtest",
            "metrics": [
              "mev_commit*",
              "go*",
              "libp2p*"
            ]
          }
        ]
    profiles:
      - main

  provider-1:
    build:
      context: .
      dockerfile: ./integrationtest/Dockerfile
      args:
        node_type: provider
    restart: always
    depends_on:
      - bootnode
    volumes:
      - ./integrationtest/keys/provider1:/key
    networks:
      - primev_net
    ports:
      - "8081:13523"
    env_file:
      - integrationtest/.env
    labels:
      com.datadoghq.ad.check_names: '["openmetrics"]'
      com.datadoghq.ad.init_configs: '[{}]'
      com.datadoghq.ad.instances: |
        [
          {
            "openmetrics_endpoint": "http://%%host%%:13523/metrics",
            "namespace": "integrationtest",
            "metrics": [
              "mev_commit*",
              "go*",
              "libp2p*"
            ]
          }
        ]
    profiles:
      - main

  provider-emulator-1:
    build:
      context: .
      dockerfile: ./integrationtest/provider/Dockerfile
    restart: always
    depends_on:
      - provider-1
    environment:
      - PROVIDER_IP=provider-1:13524
    networks:
      - primev_net
    ports:
      - "8082:8080"
    labels:
      com.datadoghq.ad.check_names: '["openmetrics"]'
      com.datadoghq.ad.init_configs: '[{}]'
      com.datadoghq.ad.instances: |
        [
          {
            "openmetrics_endpoint": "http://%%host%%:8080/metrics",
            "namespace": "integrationtest",
            "metrics": [
              "mev_commit*"
            ]
          }
        ]
    profiles:
      - main

  bidder-1:
    build:
      context: .
      dockerfile: ./integrationtest/Dockerfile
      args:
        node_type: bidder
    restart: always
    depends_on:
      - bootnode
    volumes:
      - ./integrationtest/keys/bidder1:/key
    networks:
      - primev_net
    ports:
      - "8087:13523"
    env_file:
      - integrationtest/.env
    labels:
      com.datadoghq.ad.check_names: '["openmetrics"]'
      com.datadoghq.ad.init_configs: '[{}]'
      com.datadoghq.ad.instances: |
        [
          {
            "openmetrics_endpoint": "http://%%host%%:13523/metrics",
            "namespace": "integrationtest",
            "metrics": [
              "mev_commit*",
              "go*",
              "libp2p*"
            ]
          }
        ]
    profiles:
      - main

  bidder-emulator-1:
    build:
      context: .
      dockerfile: integrationtest/real-bidder/Dockerfile
    restart: always
    depends_on:
      - bidder-1
    env_file:
      - integrationtest/.env
    environment:
      - BIDDER_IP=bidder-1:13524
    networks:
      - primev_net
    ports:
      - "8088:8080"
    labels:
      com.datadoghq.ad.check_names: '["openmetrics"]'
      com.datadoghq.ad.init_configs: '[{}]'
      com.datadoghq.ad.instances: |
        [
          {
            "openmetrics_endpoint": "http://%%host%%:8080/metrics",
            "namespace": "integrationtest",
            "metrics": [
              "mev_commit*"
            ]
          }
        ]
    profiles:
      - main

  funder:
    build:
      context: ./integrationtest/foundry
    env_file:
      - integrationtest/.env
    networks:
      - primev_net
    profiles:
      - main

  datadog-agent:
    image: gcr.io/datadoghq/agent:latest
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
    environment:
      - DD_API_KEY=${DD_KEY}
      - DD_TAGS=env:e2e
      - DD_SITE=datadoghq.com
      - DD_LOGS_ENABLED=true
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
      - DD_CONTAINER_EXCLUDE="name:datadog-agent"
    networks:
      primev_net:
        ipv4_address: 172.29.58.3
    profiles:
      - agent

networks:
  primev_net:
    external: true